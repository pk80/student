// Code generated by go-swagger; DO NOT EDIT.

package cat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteCatHandlerFunc turns a function with the right signature into a delete cat handler
type DeleteCatHandlerFunc func(DeleteCatParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteCatHandlerFunc) Handle(params DeleteCatParams) middleware.Responder {
	return fn(params)
}

// DeleteCatHandler interface for that can handle valid delete cat params
type DeleteCatHandler interface {
	Handle(DeleteCatParams) middleware.Responder
}

// NewDeleteCat creates a new http.Handler for the delete cat operation
func NewDeleteCat(ctx *middleware.Context, handler DeleteCatHandler) *DeleteCat {
	return &DeleteCat{Context: ctx, Handler: handler}
}

/*DeleteCat swagger:route DELETE /cat/{id} cat deleteCat

Delete single Category record by matching `id`

*/
type DeleteCat struct {
	Context *middleware.Context
	Handler DeleteCatHandler
}

func (o *DeleteCat) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteCatParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
