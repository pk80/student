// Code generated by go-swagger; DO NOT EDIT.

package bofa_chk

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// BofaChkImportHandlerFunc turns a function with the right signature into a bofa chk import handler
type BofaChkImportHandlerFunc func(BofaChkImportParams) middleware.Responder

// Handle executing the request and returning a response
func (fn BofaChkImportHandlerFunc) Handle(params BofaChkImportParams) middleware.Responder {
	return fn(params)
}

// BofaChkImportHandler interface for that can handle valid bofa chk import params
type BofaChkImportHandler interface {
	Handle(BofaChkImportParams) middleware.Responder
}

// NewBofaChkImport creates a new http.Handler for the bofa chk import operation
func NewBofaChkImport(ctx *middleware.Context, handler BofaChkImportHandler) *BofaChkImport {
	return &BofaChkImport{Context: ctx, Handler: handler}
}

/*BofaChkImport swagger:route POST /tx/bofa-chk/ bofa-chk bofaChkImport

Upload transactions for bofa-chk in csv format and append to `txData`

*/
type BofaChkImport struct {
	Context *middleware.Context
	Handler BofaChkImportHandler
}

func (o *BofaChkImport) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewBofaChkImportParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
