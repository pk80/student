// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a sample api for all sorts of transactions. And all transactions are categorized based upon type of account operation. \u003e\u003eTODO\u003c\u003c",
    "title": "Transactions",
    "termsOfService": "https://www.atlassian.com/legal/cloud-terms-of-service",
    "contact": {
      "name": "Developer",
      "url": "https://user@bitbucket.org",
      "email": "developer@email.com"
    },
    "license": {
      "name": "License",
      "url": "https://user@bitbucket.org"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/tx": {
      "get": {
        "description": "Get transactions for the given ` + "`" + `month` + "`" + `, ` + "`" + `year` + "`" + ` and ` + "`" + `source` + "`" + ` from ` + "`" + `txData` + "`" + `",
        "tags": [
          "tx"
        ],
        "operationId": "getBulk",
        "parameters": [
          {
            "pattern": "^\\d{6}$",
            "type": "string",
            "name": "month",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "source",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/transactions"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Delete transactions by ` + "`" + `month` + "`" + `, ` + "`" + `year` + "`" + ` and ` + "`" + `source` + "`" + `",
        "tags": [
          "tx"
        ],
        "operationId": "delete",
        "parameters": [
          {
            "pattern": "^([0-9]{4})([0])([123456789])|([0-9]{4})([1])([12])$",
            "type": "string",
            "name": "month",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "source",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tx/bofa-chk/": {
      "put": {
        "description": "Update transaction details for bofa-chk by uploading a file by referencing to ` + "`" + `lastId` + "`" + `",
        "tags": [
          "bofa-chk"
        ],
        "operationId": "bofaChkUpdate",
        "parameters": [
          {
            "type": "file",
            "format": "text/csv",
            "name": "upfile",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "name": "lastId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "source",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Upload transactions for bofa-chk in csv format and append to ` + "`" + `txData` + "`" + `",
        "tags": [
          "bofa-chk"
        ],
        "operationId": "bofaChkImport",
        "parameters": [
          {
            "type": "file",
            "format": "text/csv",
            "name": "csvfile",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/txData"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tx/{id}": {
      "get": {
        "description": "Get transaction details by matching with ` + "`" + `id` + "`" + `",
        "tags": [
          "tx"
        ],
        "operationId": "get",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "transaction": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "notes": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "transactions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/transaction"
      }
    },
    "txData": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/transaction"
          },
          "lastId": {
            "type": "integer"
          },
          "sync": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "All transactions",
      "name": "tx"
    },
    {
      "description": "All BOFA cheque related transactions",
      "name": "bofa-chk"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a sample api for all sorts of transactions. And all transactions are categorized based upon type of account operation. \u003e\u003eTODO\u003c\u003c",
    "title": "Transactions",
    "termsOfService": "https://www.atlassian.com/legal/cloud-terms-of-service",
    "contact": {
      "name": "Developer",
      "url": "https://user@bitbucket.org",
      "email": "developer@email.com"
    },
    "license": {
      "name": "License",
      "url": "https://user@bitbucket.org"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/tx": {
      "get": {
        "description": "Get transactions for the given ` + "`" + `month` + "`" + `, ` + "`" + `year` + "`" + ` and ` + "`" + `source` + "`" + ` from ` + "`" + `txData` + "`" + `",
        "tags": [
          "tx"
        ],
        "operationId": "getBulk",
        "parameters": [
          {
            "pattern": "^\\d{6}$",
            "type": "string",
            "name": "month",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "source",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/transactions"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Delete transactions by ` + "`" + `month` + "`" + `, ` + "`" + `year` + "`" + ` and ` + "`" + `source` + "`" + `",
        "tags": [
          "tx"
        ],
        "operationId": "delete",
        "parameters": [
          {
            "pattern": "^([0-9]{4})([0])([123456789])|([0-9]{4})([1])([12])$",
            "type": "string",
            "name": "month",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "source",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tx/bofa-chk/": {
      "put": {
        "description": "Update transaction details for bofa-chk by uploading a file by referencing to ` + "`" + `lastId` + "`" + `",
        "tags": [
          "bofa-chk"
        ],
        "operationId": "bofaChkUpdate",
        "parameters": [
          {
            "type": "file",
            "format": "text/csv",
            "name": "upfile",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "name": "lastId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "source",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Upload transactions for bofa-chk in csv format and append to ` + "`" + `txData` + "`" + `",
        "tags": [
          "bofa-chk"
        ],
        "operationId": "bofaChkImport",
        "parameters": [
          {
            "type": "file",
            "format": "text/csv",
            "name": "csvfile",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/txData"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tx/{id}": {
      "get": {
        "description": "Get transaction details by matching with ` + "`" + `id` + "`" + `",
        "tags": [
          "tx"
        ],
        "operationId": "get",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "transaction": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "notes": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "transactions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/transaction"
      }
    },
    "txData": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/transaction"
          },
          "lastId": {
            "type": "integer"
          },
          "sync": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "All transactions",
      "name": "tx"
    },
    {
      "description": "All BOFA cheque related transactions",
      "name": "bofa-chk"
    }
  ]
}`))
}
